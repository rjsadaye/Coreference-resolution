# Coreference-resolution

##########################################################

TO RUN END TO END PIPELINE:

go the /end_to_end folder

Place the input file in the /input folder

Run the following command on terminal:

./run.sh <name of the file you want to run from input folder>

The output will be generated in the /output folder

You can check output for mention pairs, coreferent pairs, chains

TO RUN CEAF BASED EVALUATION ON THE OUTPUT:

go the /end_to_end folder

run the following command on terminal:

python evaluation.py <path to the chains file generated by system> <path to the gold mentions chain file>

##############################################################

##############################################################
PREREQUISITES:

CLAMP command line tool
Stanford CoreNLP toolkit
Stanford ner toolkit

python packages:
genderize
inflect
##############################################################





Coreference resolution in clinical documents

#For generating phrases from .txt files:

python npchunking.py <Path the the folder containing the .txt files>

#For generating glove representation:

python glove.py <Path to the corpus pickle file> <Path to the file containing phrases> 

python glove_single.py <Path to the corpus pickle file> <Path to the input.txt file generated by gen_in_out.py> <name of dataset i2b2 or mimic>

#For generating input and output:

python gen_in_out.py <Path to Beth containing concept files> <Path to Partners containing concept files>

python input_vector_nn.py <Path to path.glove> # path to glove representation of phrases

#For running the ensemble classifier:

python boost_classifier.py <Path to the nn_input.txt file>

### NO NEED NOW ###
Shell Script
1. input_generation_shell <Path to Beth containing concept files> <Path to Partners containing concept files>
###################

running keras implementation
python tf_nn.py <path to nn_input.txt>

Running order:
i2b2 input output
1. gen_in_out.py
2. glove_single.py
3. input_vector_nn.py

mimic_data
1. glove_single.py
2. input_vector_nn.py

neural_network
1. merge_inputs.py
2. tf_nn.py
test
test.1. gen_in_out.py 
test.2. input_vector_nn.py
3. classify_concepts.py



Packages required:
1. numpy
2. tensorflow
3. keras
4. nltk
5. h5py
